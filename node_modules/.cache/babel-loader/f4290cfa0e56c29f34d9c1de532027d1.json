{"remainingRequest":"/Users/Nacho/Desktop/webapp/node_modules/babel-loader/lib/index.js!/Users/Nacho/Desktop/webapp/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Nacho/Desktop/webapp/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Nacho/Desktop/webapp/src/components/IconsDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Nacho/Desktop/webapp/src/components/IconsDemo.vue","mtime":1643116730000},{"path":"/Users/Nacho/Desktop/webapp/babel.config.js","mtime":1645047063477},{"path":"/Users/Nacho/Desktop/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1645023238598},{"path":"/Users/Nacho/Desktop/webapp/node_modules/babel-loader/lib/index.js","mtime":1645023239264},{"path":"/Users/Nacho/Desktop/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1645023238598},{"path":"/Users/Nacho/Desktop/webapp/node_modules/vue-loader-v16/dist/index.js","mtime":1645023239257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpY29uczogbnVsbCwKICAgICAgZmlsdGVyOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgZmV0Y2goJ2RhdGEvaWNvbnMuanNvbicsIHsKICAgICAgaGVhZGVyczogewogICAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlJwogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICB9KS50aGVuKGZ1bmN0aW9uIChkKSB7CiAgICAgIHZhciBpY29ucyA9IGQuaWNvbnM7CiAgICAgIHZhciBkYXRhID0gaWNvbnMuZmlsdGVyKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgIHJldHVybiB2YWx1ZS5pY29uLnRhZ3MuaW5kZXhPZignZGVwcmVjYXRlJykgPT09IC0xOwogICAgICB9KTsKICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uIChpY29uMSwgaWNvbjIpIHsKICAgICAgICBpZiAoaWNvbjEucHJvcGVydGllcy5uYW1lIDwgaWNvbjIucHJvcGVydGllcy5uYW1lKSByZXR1cm4gLTE7ZWxzZSBpZiAoaWNvbjEucHJvcGVydGllcy5uYW1lIDwgaWNvbjIucHJvcGVydGllcy5uYW1lKSByZXR1cm4gMTtlbHNlIHJldHVybiAwOwogICAgICB9KTsKICAgICAgX3RoaXMuaWNvbnMgPSBkYXRhOwogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgZmlsdGVyZWRJY29uczogZnVuY3Rpb24gZmlsdGVyZWRJY29ucygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAodGhpcy5maWx0ZXIpIHJldHVybiB0aGlzLmljb25zLmZpbHRlcihmdW5jdGlvbiAoaWNvbikgewogICAgICAgIHJldHVybiBpY29uLnByb3BlcnRpZXMubmFtZS5pbmRleE9mKF90aGlzMi5maWx0ZXIudG9Mb3dlckNhc2UoKSkgPiAtMTsKICAgICAgfSk7ZWxzZSByZXR1cm4gdGhpcy5pY29uczsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;AAoGA,eAAe;AACXA,MADW,kBACJ;AACH,WAAO;AACHC,WAAK,EAAE,IADJ;AAEHC,YAAM,EAAE;AAFL,KAAP;AAIH,GANU;AAOXC,SAPW,qBAOD;AAAA;;AACNC,SAAK,CAAC,iBAAD,EAAoB;AAAEC,aAAO,EAAE;AAAE,yBAAkB;AAApB;AAAX,KAApB,CAAL,CAAwEC,IAAxE,CAA6E,aAAE;AAAA,aAAKC,GAAG,CAACC,IAAJ,EAAL;AAAA,KAA/E,EACKF,IADL,CACU,aAAK;AACP,UAAIL,KAAI,GAAIQ,CAAC,CAACR,KAAd;AACA,UAAID,IAAG,GAAIC,KAAK,CAACC,MAAN,CAAa,eAAI,EAAK;AAC7B,eAAOQ,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,OAAhB,CAAwB,WAAxB,MAAyC,CAAC,CAAjD;AACH,OAFU,CAAX;AAGAb,UAAI,CAACc,IAAL,CAAU,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACxB,YAAGD,KAAK,CAACE,UAAN,CAAiBC,IAAjB,GAAwBF,KAAK,CAACC,UAAN,CAAiBC,IAA5C,EACI,OAAO,CAAC,CAAR,CADJ,KAEK,IAAGH,KAAK,CAACE,UAAN,CAAiBC,IAAjB,GAAwBF,KAAK,CAACC,UAAN,CAAiBC,IAA5C,EACD,OAAO,CAAP,CADC,KAGD,OAAO,CAAP;AACP,OAPD;AASA,WAAI,CAACjB,KAAL,GAAaD,IAAb;AACH,KAhBL;AAiBH,GAzBU;AA0BXmB,UAAQ,EAAE;AACNC,iBADM,2BACU;AAAA;;AACZ,UAAI,KAAKlB,MAAT,EACI,OAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkB,cAAG;AAAA,eAAKS,IAAI,CAACM,UAAL,CAAgBC,IAAhB,CAAqBL,OAArB,CAA6B,MAAI,CAACX,MAAL,CAAYmB,WAAZ,EAA7B,IAA0D,CAAC,CAAhE;AAAA,OAArB,CAAP,CADJ,KAGI,OAAO,KAAKpB,KAAZ;AACR;AANM;AA1BC,CAAf","names":["data","icons","filter","mounted","fetch","headers","then","res","json","d","value","icon","tags","indexOf","sort","icon1","icon2","properties","name","computed","filteredIcons","toLowerCase"],"sourceRoot":"","sources":["/Users/Nacho/Desktop/webapp/src/components/IconsDemo.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"card\">\n            <h3>Icons</h3>\n            <p>PrimeVue components internally use <a href=\"https://github.com/primefaces/primeicons\" class=\"font-medium\">PrimeIcons</a> library, the official icons suite from <a href=\"https://www.primetek.com.tr\" class=\"font-medium\">PrimeTek</a>.</p>\n\n            <h5>Download</h5>\n            <p>PrimeIcons is available at npm, run the following command to download it to your project.</p>\n\n<pre v-code><code>\nnpm install primeicons --save\n\n</code></pre>\n\n            <h5>Getting Started</h5>\n            <p>PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such as <strong>pi pi-check</strong>.\n            A standalone icon can be displayed using an element like <i>i</i> or <i>span</i></p>\n\n<pre v-code><code>\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\n&lt;i class=\"pi pi-times\"&gt;&lt;/i&gt;\n\n</code></pre>\n\n<i class=\"pi pi-check\" style=\"margin-right: .5rem\"></i>\n<i class=\"pi pi-times\"></i>\n\n            <h5>Size</h5>\n            <p>Size of the icons can easily be changed using font-size property.</p>\n\n<pre v-code><code>\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\n\n</code></pre>\n\n            <i class=\"pi pi-check\"></i>\n\n<pre v-code><code>\n&lt;i class=\"pi pi-check\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\n\n</code></pre>\n\n            <i class=\"pi pi-check\" style=\"font-size: 2rem\"></i>\n\n            <h5>Spinning Animation</h5>\n            <p>Special pi-spin class applies continuous rotation to an icon.</p>\n<pre v-code><code>\n&lt;i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\n\n</code></pre>\n\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n\n            <h5>Constants</h5>\n            <p>PrimeIcons constants API is provided to easily choose an icon with typescript e.g. when defining a menu model.</p>\n<pre v-code><code>\n&lt;Menu :model=\"items\" /&gt;\n\n</code></pre>\n\n<pre v-code.script><code>\nimport {PrimeIcons} from 'primevue/api';\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Update',\n\t\t\t\t\ticon: PrimeIcons.REFRESH,\n                    to: '/update'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Delete',\n\t\t\t\t\ticon: PrimeIcons.TIMES,\n                    to: '/delete'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}\n\n</code></pre>\n\n            <h5>List of Icons</h5>\n            <p>Here is the current list of PrimeIcons, more icons are added periodically. You may also <a href=\"https://github.com/primefaces/primeicons/issues\" class=\"font-medium\">request new icons</a> at the issue tracker.</p>\n\n            <InputText v-model=\"filter\" class=\"w-full p-3 mt-3 mb-5\" placeholder=\"Search an icon\" />\n\n            <div class=\"grid icons-list text-center\">\n                <div class=\"col-6 sm:col-4 lg:col-3 xl:col-2 pb-5\" v-for=\"icon of filteredIcons\" :key=\"icon.properties.name\">\n                    <i :class=\"'text-2xl mb-2 pi pi-' + icon.properties.name\"></i>\n                    <div>pi-{{icon.properties.name}}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            icons: null,\n            filter: null\n        }\n    },\n    mounted() {\n        fetch('data/icons.json', { headers: { 'Cache-Control' : 'no-cache' } }).then(res => res.json())\n            .then(d => {\n                let icons = d.icons;\n                let data = icons.filter(value => {\n                    return value.icon.tags.indexOf('deprecate') === -1;\n                });\n                data.sort((icon1, icon2) => {\n                    if(icon1.properties.name < icon2.properties.name)\n                        return -1;\n                    else if(icon1.properties.name < icon2.properties.name)\n                        return 1;\n                    else\n                        return 0;\n                });\n\n                this.icons = data;\n            });\n    },\n    computed: {\n        filteredIcons() {\n            if (this.filter)\n                return this.icons.filter(icon => icon.properties.name.indexOf(this.filter.toLowerCase()) > -1);\n            else\n                return this.icons;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../assets/demo/documentation.scss';\n\n.icons-list {\n    i {\n        color: var(--text-color-secondary);\n    }\n}\n</style>\n"]}]}