{"remainingRequest":"/Users/Nacho/Desktop/webapp/node_modules/babel-loader/lib/index.js!/Users/Nacho/Desktop/webapp/node_modules/eslint-loader/index.js??ref--14-0!/Users/Nacho/Desktop/webapp/src/service/NodeService.js","dependencies":[{"path":"/Users/Nacho/Desktop/webapp/src/service/NodeService.js","mtime":1643116730000},{"path":"/Users/Nacho/Desktop/webapp/babel.config.js","mtime":1645047063477},{"path":"/Users/Nacho/Desktop/webapp/node_modules/cache-loader/dist/cjs.js","mtime":1645023238598},{"path":"/Users/Nacho/Desktop/webapp/node_modules/babel-loader/lib/index.js","mtime":1645023239264},{"path":"/Users/Nacho/Desktop/webapp/node_modules/eslint-loader/index.js","mtime":1645023238790}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvTmFjaG8vRGVza3RvcC93ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvTmFjaG8vRGVza3RvcC93ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Cgp2YXIgTm9kZVNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIE5vZGVTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5vZGVTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhOb2RlU2VydmljZSwgW3sKICAgIGtleTogImdldFRyZWVUYWJsZU5vZGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUcmVlVGFibGVOb2RlcygpIHsKICAgICAgcmV0dXJuIGZldGNoKCdkYXRhL3RyZWV0YWJsZW5vZGVzLmpzb24nKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnJvb3Q7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFRyZWVOb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VHJlZU5vZGVzKCkgewogICAgICByZXR1cm4gZmV0Y2goJ2RhdGEvdHJlZW5vZGVzLmpzb24nKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnJvb3Q7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE5vZGVTZXJ2aWNlOwp9KCk7CgpleHBvcnQgeyBOb2RlU2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/Nacho/Desktop/webapp/src/service/NodeService.js"],"names":["NodeService","fetch","then","res","json","d","root"],"mappings":";;;;IAAqBA,W;;;;;;;WAEjB,6BAAoB;AAChB,aAAOC,KAAK,CAAC,0BAAD,CAAL,CAAkCC,IAAlC,CAAuC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAA1C,EAA0DF,IAA1D,CAA+D,UAAAG,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OAAhE,CAAP;AACH;;;WAED,wBAAe;AACX,aAAOL,KAAK,CAAC,qBAAD,CAAL,CAA6BC,IAA7B,CAAkC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAArC,EAAqDF,IAArD,CAA0D,UAAAG,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OAA3D,CAAP;AACH;;;;;;SARgBN,W","sourcesContent":["export default class NodeService {\n\n    getTreeTableNodes() {\n        return fetch('data/treetablenodes.json').then(res => res.json()).then(d => d.root);\n    }\n\n    getTreeNodes() {\n        return fetch('data/treenodes.json').then(res => res.json()).then(d => d.root);\n    }\n    \n}\n"]}]}